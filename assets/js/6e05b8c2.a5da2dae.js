"use strict";(self.webpackChunkchess_barebones_docs=self.webpackChunkchess_barebones_docs||[]).push([[2348],{1134:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>t});var s=n(3917);const c={},i=s.createContext(c);function o(e){const r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),s.createElement(i.Provider,{value:r},e.children)}},6101:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api-reference/core/index","title":"Core API Reference","description":"The @chess-barebones/core package provides the fundamental building blocks for creating turn-based, board-centric games.","source":"@site/docs/api-reference/core/index.md","sourceDirName":"api-reference/core","slug":"/api-reference/core/","permalink":"/chess-barebones/docs/api-reference/core/","draft":false,"unlisted":false,"editUrl":"https://github.com/iamawebgeek/chess-barebones/tree/main/docs/docs/api-reference/core/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Custom Boards","permalink":"/chess-barebones/docs/advanced-guides/custom-boards"},"next":{"title":"Game","permalink":"/chess-barebones/docs/api-reference/core/game"}}');var c=n(1273),i=n(1134);const o={sidebar_position:1},t="Core API Reference",a={},d=[{value:"Key Exports",id:"key-exports",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.header,{children:(0,c.jsx)(r.h1,{id:"core-api-reference",children:"Core API Reference"})}),"\n",(0,c.jsxs)(r.p,{children:["The ",(0,c.jsx)(r.code,{children:"@chess-barebones/core"})," package provides the fundamental building blocks for creating turn-based, board-centric games."]}),"\n",(0,c.jsx)(r.h2,{id:"key-exports",children:"Key Exports"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"Game"})}),": The main game loop orchestrator."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"AbstractBoard"})}),": An abstract class for representing a game board."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"Board8x8"})}),": A concrete implementation of ",(0,c.jsx)(r.code,{children:"AbstractBoard"})," for an 8x8 board."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"AbstractFigure"})}),": An abstract class for representing a game piece."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"BaseFigure"})}),": A concrete implementation of ",(0,c.jsx)(r.code,{children:"AbstractFigure"})," with no moves."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"Player"})}),": Represents a participant in the game."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"Handler"})}),": An interface for hooking into game events."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"combineHandlers"})}),": A function for combining multiple handlers."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"MoveSerializer"})}),": An abstract class for serializing and deserializing moves."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"Timer"})}),": A simple chess-like clock."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.strong,{children:(0,c.jsx)(r.code,{children:"PuzzleProcessor"})}),": A handler for creating interactive puzzles."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);