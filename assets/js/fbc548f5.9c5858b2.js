"use strict";(self.webpackChunkchess_barebones_docs=self.webpackChunkchess_barebones_docs||[]).push([[4116],{1134:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>c});var n=t(3917);const r={},a=n.createContext(r);function o(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(a.Provider,{value:s},e.children)}},7157:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"getting-started/packages","title":"Packages","description":"Chess barebones is a monorepo that consists of three packages:","source":"@site/docs/getting-started/packages.md","sourceDirName":"getting-started","slug":"/getting-started/packages","permalink":"/docs/getting-started/packages","draft":false,"unlisted":false,"editUrl":"https://github.com/iamawebgeek/chess-barebones/tree/main/docs/docs/getting-started/packages.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/getting-started/overview"},"next":{"title":"Philosophy","permalink":"/docs/getting-started/philosophy"}}');var r=t(1273),a=t(1134);const o={sidebar_position:2},c="Packages",i={},d=[];function h(e){const s={code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"packages",children:"Packages"})}),"\n",(0,r.jsx)(s.p,{children:"Chess barebones is a monorepo that consists of three packages:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"@chess-barebones/core"})}),": The core library that provides the fundamental building blocks for creating turn-based, board-centric games. This package includes the ",(0,r.jsx)(s.code,{children:"Game"})," loop, ",(0,r.jsx)(s.code,{children:"AbstractBoard"}),", ",(0,r.jsx)(s.code,{children:"AbstractFigure"}),", ",(0,r.jsx)(s.code,{children:"Player"}),", and other essential components."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"@chess-barebones/chess"})}),": A concrete implementation of the rules of chess, built on top of ",(0,r.jsx)(s.code,{children:"@chess-barebones/core"}),". This package includes classes for all the standard chess pieces, as well as handlers for checkmate, stalemate, and other game-ending conditions."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"@chess-barebones/chess-react"})}),": A set of React components for rendering a chess game in a React application. This package provides a ",(0,r.jsx)(s.code,{children:"Chess"})," component that can be used to render any game created with the ",(0,r.jsx)(s.code,{children:"@chess-barebones/core"})," library, as well as a ",(0,r.jsx)(s.code,{children:"RegularChess"})," component that is pre-configured for a standard game of chess."]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);