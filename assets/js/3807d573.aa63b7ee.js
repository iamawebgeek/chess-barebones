"use strict";(self.webpackChunkchess_barebones_docs=self.webpackChunkchess_barebones_docs||[]).push([[8234],{1134:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var o=n(3917);const a={},t=o.createContext(a);function r(e){const s=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(t.Provider,{value:s},e.children)}},5873:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"advanced-guides/double-move-chess","title":"Double-Move Chess","description":"Double-Move Chess is a variant where each player can make two moves in a row. This can be implemented by creating a custom Game class that overrides the getPlayerToMove method.","source":"@site/docs/advanced-guides/double-move-chess.md","sourceDirName":"advanced-guides","slug":"/advanced-guides/double-move-chess","permalink":"/chess-barebones/docs/advanced-guides/double-move-chess","draft":false,"unlisted":false,"editUrl":"https://github.com/iamawebgeek/chess-barebones/tree/main/docs/docs/advanced-guides/double-move-chess.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Chess 960","permalink":"/chess-barebones/docs/advanced-guides/chess-960"},"next":{"title":"Creating a New Board Game","permalink":"/chess-barebones/docs/advanced-guides/creating-a-new-board-game"}}');var a=n(1273),t=n(1134);const r={sidebar_position:2},c="Double-Move Chess",d={},i=[{value:"Example",id:"example",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"double-move-chess",children:"Double-Move Chess"})}),"\n",(0,a.jsxs)(s.p,{children:["Double-Move Chess is a variant where each player can make two moves in a row. This can be implemented by creating a custom ",(0,a.jsx)(s.code,{children:"Game"})," class that overrides the ",(0,a.jsx)(s.code,{children:"getPlayerToMove"})," method."]}),"\n",(0,a.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-typescript",children:"import { Game, Player } from '@chess-barebones/core';\n\nclass DoubleMoveChess extends Game<Figure, any> {\n  private moveCount = 0;\n\n  getPlayerToMove(): Player | null {\n    if (this.moveCount % 2 === 0) {\n      return super.getPlayerToMove();\n    }\n    return this.state.lastMovedPlayer;\n  }\n\n  move(move: string): void {\n    super.move(move);\n    this.moveCount++;\n  }\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);